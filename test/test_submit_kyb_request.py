# coding: utf-8

"""
    Credit

    # Introduction Description of Bankable Credit RESTful API. Current limitations: - The Credit service does not support [cross origin headers](https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS) for security reasons. It is not possible to use Swagger UI and make API calls directly from the browser. - Modification API requests (`POST`, `DELETE`) require additional security scopes granted under the service agreement. - Consider the Bankable limitations for API calls that depend on the contract agreement.

    The version of the OpenAPI document: b6bf82e
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from bankable.models.submit_kyb_request import SubmitKYBRequest

class TestSubmitKYBRequest(unittest.TestCase):
    """SubmitKYBRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SubmitKYBRequest:
        """Test SubmitKYBRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SubmitKYBRequest`
        """
        model = SubmitKYBRequest()
        if include_optional:
            return SubmitKYBRequest(
                annual_revenue = 10000,
                incorporation_date = 2006-01-02,
                financial_institution = None,
                income_source = business_activities,
                trading_name = Bankable,
                industry = None,
                financing_frequency = regular,
                financing_needed = 100.5,
                comments = Ipsum deserunt ad ipsum ad commodo.,
                ultimate_beneficial_owners = None,
                directors = None,
                corporate_structure = None
            )
        else:
            return SubmitKYBRequest(
                annual_revenue = 10000,
                incorporation_date = 2006-01-02,
                financial_institution = None,
                income_source = business_activities,
                financing_frequency = regular,
                directors = None,
        )
        """

    def testSubmitKYBRequest(self):
        """Test SubmitKYBRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
